import cv2
import numpy as np

# Load the rice image
img = cv2.imread('ricesam2.jpeg', 0)
img1 = cv2.imread('ricesam2.jpeg', 0)
# Remove salt-and-pepper noise using Median Blur
img_blur = cv2.medianBlur(img, 25)

# Apply Adaptive Thresholding to isolate rice grains
thresh = cv2.adaptiveThreshold(img_blur, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY_INV, 21, 2)

# Find contours of the individual rice grains
contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

# Calculate the length of each rice grain
lengths = []
for contour in contours:
    length = cv2.arcLength(contour, True)
    lengths.append(length)

# Find the smallest rice grain
smallest_length = min(lengths)

# Find the largest rice grain
largest_length = min(lengths)
# Draw a rectangle around the smallest rice grain
for contour in contours:
    length = cv2.arcLength(contour, True)
    if length == smallest_length:
        x, y, w, h = cv2.boundingRect(contour)
        cv2.rectangle(img1, (x, y), (x+w, y+h), (0, 0, 255), 2)
        cv2.drawContours(img1, contour, -1, (0, 255, 0), 2)

# Find the centroid of the smallest rice grain
for contour in contours:
    length = cv2.arcLength(contour, True)
    if length == smallest_length:
        M = cv2.moments(contour)
        cx = int(M["m10"] / M["m00"])
        cy = int(M["m01"] / M["m00"])
        
# Add text to the image with the centroid coordinates
text = "Number of rice grains: " + str(len(contours)) 
text1= " Smallest length: " + str(round(smallest_length, 2))+" largest length: " + str(round(largest_length, 2))
text2= " Results generated by: rohaAreej"
cv2.putText(img1, text, (cx - 240, cy - 80), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 1)
cv2.putText(img1, text1, (cx - 250, cy - -210), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 1)
cv2.putText(img1, text2, (cx - 250, cy - -230), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 1)
# Display the original image
cv2.imshow("Original Image", img)

# Display the blurred image
cv2.imshow("Blurred Image", img_blur)

# Display the thresholded image
cv2.imshow("Thresholded Image", thresh)

# Display the number of rice grains and their lengths
print("Number of rice grains:", len(contours))
print("Lengths of rice grains:", lengths)
print("Smallest rice grain length:", smallest_length)

# Display the image with the smallest rice grain highlighted
cv2.imshow("Rice Image", img1)
cv2.waitKey(0)
cv2.destroyAllWindows()
